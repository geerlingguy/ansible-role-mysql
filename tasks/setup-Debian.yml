---
- name: Check if MySQL is already installed.
  stat: path=/etc/init.d/mysql
  register: mysql_installed

- name: Add repo.mysql.com apt key
  apt_key: url=http://repo.mysql.com/RPM-GPG-KEY-mysql
  when: mysql_apt_repo_version is defined

- name: Add repo.mysql.com apt repo
  apt_repository:
    repo: "deb http://repo.mysql.com/apt/{{ansible_distribution|lower}}/ {{mysql_apt_repo_release}} mysql-{{mysql_apt_repo_version}}"
  when: mysql_apt_repo_version is defined

# This ensures that packages from repo.mysql.com take precedence over OS provided packages
- name: Update apt to prefer repo.mysql.com packages
  copy:
    content: |
      Package: *
      Pin: origin repo.mysql.com
      Pin-Priority: 900
    dest: /etc/apt/preferences.d/mysql
    owner: root
    group: root
    mode: 0644
  when: mysql_apt_repo_version is defined

- name: Update apt cache if MySQL is not yet installed.
  apt: update_cache=yes
  when: mysql_installed.stat.exists == false

- name: Ensure MySQL Python libraries are installed.
  apt: "name=python-mysqldb state=installed"

- name: Ensure MySQL packages are installed.
  apt: "name={{ item }} state=installed"
  with_items: "{{ mysql_packages }}"
  register: deb_mysql_install_packages

# Because Ubuntu starts MySQL as part of the install process, we need to stop
# mysql and remove the logfiles in case the user set a custom log file size.
- name: Ensure MySQL is stopped after initial install.
  service: "name={{ mysql_daemon }} state=stopped"
  when: mysql_installed.stat.exists == false

- name: Delete innodb log files created by apt package after initial install.
  file: path={{ mysql_datadir }}/{{item}} state=absent
  with_items:
          - "ib_logfile0"
          - "ib_logfile1"
  when: mysql_installed.stat.exists == false
