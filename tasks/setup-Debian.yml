---
- name: Check if MySQL is already installed.
  stat: path=/etc/init.d/mysql
  register: mysql_installed

- name: Ensure apt key is present.
  apt_key:
    keyserver: 'hkp://pgp.mit.edu:80'
    id: 'A4A9406876FCBD3C456770C88C718D3B5072E1F5'
    state: present
  register: mysql_apt_key
  when: mysql_version is defined

- name: Ensure apt sources list is present.
  lineinfile:
    dest: '/etc/apt/sources.list.d/mysql.list'
    regexp: '^deb'
    line: "deb http://repo.mysql.com/apt/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release | lower }} mysql-{{Â mysql_version }}"
    create: yes
    state: present
  register: mysql_sources_list
  when: mysql_version is defined

- name: Update apt cache if MySQL is not yet installed.
  apt: update_cache=yes
  when: mysql_installed.stat.exists == false or mysql_apt_key.changed or mysql_sources_list.changed

- name: Determine required MySQL Python libraries.
  set_fact:
    deb_mysql_python_package: "{% if 'python3' in ansible_python_interpreter|default('') %}python3-mysqldb{% else %}python-mysqldb{% endif %}"

- name: Ensure MySQL Python libraries are installed.
  apt: "name={{ deb_mysql_python_package }} state=present"

- name: Ensure MySQL packages are installed.
  apt: "name={{ item }} state=present"
  with_items: "{{ mysql_packages }}"
  register: deb_mysql_install_packages

# Because Ubuntu starts MySQL as part of the install process, we need to stop
# mysql and remove the logfiles in case the user set a custom log file size.
- name: Ensure MySQL is stopped after initial install.
  service: "name={{ mysql_daemon }} state=stopped"
  when: mysql_installed.stat.exists == false

- name: Delete innodb log files created by apt package after initial install.
  file: path={{ mysql_datadir }}/{{item}} state=absent
  with_items:
          - "ib_logfile0"
          - "ib_logfile1"
  when: mysql_installed.stat.exists == false
